{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Documentos/IniReact/PokedexPokeApi/src/SinglePokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SinglePokemon() {\n  _s();\n\n  const [poke, setPoke] = useState([]);\n  const [nameOrId, setNameOrId] = useState(25);\n  const [pokeType, setType] = useState([]);\n\n  function getPokemon() {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${nameOrId}`).then(res => {\n      setPoke(res.data);\n      setType(res.data.types[0].type.name);\n    });\n  }\n\n  useEffect(() => {\n    getPokemon();\n  });\n\n  if (nameOrId === 0 || nameOrId === \"\") {\n    setNameOrId(`meowth`);\n  }\n\n  const colorType = () => {\n    switch (pokeType) {\n      case 'grass':\n        return '#36EB3C';\n        break;\n\n      case 'bug':\n        return 'darkgreen';\n        break;\n\n      case 'poison':\n        return '#6F4ED4';\n        break;\n\n      case 'steel':\n        return '#EEFFE6';\n        break;\n\n      case 'fairy':\n        return 'white';\n        break;\n\n      case 'dark':\n        return 'black';\n        break;\n\n      case 'fire':\n        return '#FF130B';\n        break;\n\n      case 'water':\n        return '#A8E4FF';\n        break;\n\n      case 'electric':\n        return 'yellow';\n        break;\n\n      default:\n        return '#F520E0';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [nameOrId === '' ? \" \" : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${poke.id}.png`,\n        style: {\n          width: '150px',\n          backgroundColor: colorType()\n        },\n        className: \"pokeimg\",\n        alt: \"imagem pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [poke.name, \" #\", nameOrId === '' ? 'pokemon' : poke.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorType()\n          },\n          children: pokeType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setNameOrId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getPokemon(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SinglePokemon, \"WqxTGMdjJ7E0wrvUaURFNzUu68g=\");\n\n_c = SinglePokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePokemon\");","map":{"version":3,"sources":["/home/brandon/Documentos/IniReact/PokedexPokeApi/src/SinglePokemon.js"],"names":["React","useState","useEffect","axios","SinglePokemon","poke","setPoke","nameOrId","setNameOrId","pokeType","setType","getPokemon","get","then","res","data","types","type","name","colorType","id","width","backgroundColor","color","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,eAAe,SAASC,aAAT,GAAwB;AAAA;;AAEnC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,QAAD,EAAWC,OAAX,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASU,UAAT,GAAqB;AACjBR,IAAAA,KAAK,CAACS,GAAN,CAAW,qCAAoCL,QAAS,EAAxD,EACCM,IADD,CACMC,GAAG,IAAE;AACPR,MAAAA,OAAO,CAACQ,GAAG,CAACC,IAAL,CAAP;AACAL,MAAAA,OAAO,CAACI,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAlB,CAAuBC,IAAxB,CAAP;AACJ,KAJA;AAMH;;AAEDhB,EAAAA,SAAS,CAAC,MAAI;AAAES,IAAAA,UAAU;AAAI,GAArB,CAAT;;AACA,MAAGJ,QAAQ,KAAG,CAAX,IAAcA,QAAQ,KAAG,EAA5B,EAA+B;AAC3BC,IAAAA,WAAW,CAAE,QAAF,CAAX;AACH;;AACD,QAAMW,SAAS,GAAC,MAAI;AACjB,YAAOV,QAAP;AACI,WAAK,OAAL;AAAe,eAAO,SAAP;AACf;;AACA,WAAK,KAAL;AAAa,eAAO,WAAP;AACb;;AACA,WAAK,QAAL;AAAgB,eAAO,SAAP;AAChB;;AACA,WAAK,OAAL;AAAe,eAAO,SAAP;AACf;;AACA,WAAK,OAAL;AAAe,eAAO,OAAP;AACf;;AACA,WAAK,MAAL;AAAc,eAAO,OAAP;AACd;;AACA,WAAK,MAAL;AAAc,eAAO,SAAP;AACd;;AACA,WAAK,OAAL;AAAe,eAAO,SAAP;AACf;;AACA,WAAK,UAAL;AAAkB,eAAO,QAAP;AAClB;;AACA;AAAS,eAAO,SAAP;AAnBb;AAqBF,GAtBD;;AAwBA,sBACI;AAAA,4BACG;AAAA,iBACIF,QAAQ,KAAG,EAAX,GAAc,GAAd,gBAAkB;AAAK,QAAA,GAAG,EAAG,4EAA2EF,IAAI,CAACe,EAAG,MAA9F;AAAqG,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,OAAP;AAAgBC,UAAAA,eAAe,EAACH,SAAS;AAAzC,SAA5G;AAA0J,QAAA,SAAS,EAAC,SAApK;AAA8K,QAAA,GAAG,EAAC;AAAlL;AAAA;AAAA;AAAA;AAAA,cADtB,eAEK;AAAA,mBAAKd,IAAI,CAACa,IAAV,QAAkBX,QAAQ,KAAG,EAAX,GAAc,SAAd,GAAyBF,IAAI,CAACe,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAA,0CAAS;AAAM,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAACJ,SAAS;AAAhB,WAAb;AAAA,oBAAmCV;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAMQ;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAGe,CAAD,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA9C;AAAA;AAAA;AAAA;AAAA,YANR,eAOQ;AAAQ,MAAA,OAAO,EAAE,MAAIf,UAAU,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA,kBADJ;AAWH;;GAtDuBP,a;;KAAAA,a","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from 'axios';\n\n\n\nexport default function SinglePokemon(){\n\n    const [poke,setPoke] = useState([])\n    const [nameOrId,setNameOrId] = useState(25)\n    const [pokeType, setType] = useState([])\n\n    function getPokemon(){     \n        axios.get(`https://pokeapi.co/api/v2/pokemon/${nameOrId}`)\n        .then(res=>{\n            setPoke(res.data) \n            setType(res.data.types[0].type.name)        \n       })\n\n    }\n    \n    useEffect(()=>{ getPokemon() },)\n    if(nameOrId===0||nameOrId===\"\"){\n        setNameOrId(`meowth`)\n    }\n    const colorType=()=>{\n       switch(pokeType){\n           case 'grass':  return '#36EB3C'\n           break;\n           case 'bug':  return 'darkgreen'\n           break;\n           case 'poison':  return '#6F4ED4'\n           break;\n           case 'steel':  return '#EEFFE6'\n           break;\n           case 'fairy':  return 'white'\n           break;\n           case 'dark':  return 'black'\n           break;\n           case 'fire':  return '#FF130B'\n           break;\n           case 'water':  return '#A8E4FF'\n           break;\n           case 'electric':  return 'yellow'\n           break;\n           default: return '#F520E0'\n       }\n    }\n\n    return(\n        <>\n           <div>\n              {nameOrId===''?\" \":<img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${poke.id}.png`} style={{width:'150px', backgroundColor:colorType()}} className=\"pokeimg\" alt='imagem pokemon'/>}\n                <h2>{poke.name} #{nameOrId===''?'pokemon': poke.id}</h2>  \n                <p>Type: <span style={{color:colorType()}}>{pokeType}</span></p>               \n          </div> \n                <input  type='text' onChange={(e)=>setNameOrId(e.target.value)} />\n                <button onClick={()=>getPokemon()} >Search</button>           \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}